GMT之利用minmax寻找数据极值
###########################

:date: 2013-08-22 14:23
:author: SeisMan
:category: GMT
:tags: GMT命令, GMT4
:slug: gmt-minmax

.. contents::

GMT不仅仅具有强大的画图功能，同时也具有一定的数据处理能力，minmax就是其中之一。从命令的名字可以猜出，这个命令是用来寻找最大最小值的。很多时候，在GMT之外，这个命令用起来也很顺手。

语法
====

:: 

 minmax [files] [-C] [-E<L|l|H|h><col>] [-H[i][<nrec>]]
 [-I[p]<dx>[/<dy>[/<dz>..]] [-S[x][y]] [-T<dz>[/<col>]] [-:[i|o]]
 [-bi[s|S|d|D[<ncol>]|c[<var1>/...]]] [-f[i|o]<colinfo>]
 [-m[i|o][<flag>]]

选项说明
========

minmax的输入可以来自于文件，也可以来自于标准输入。minmax用来处理数字型数据，对于字符串会当前NaN来处理。由于其寻找的是每列的极值，这要求数据格式统一，每个记录的列数相同，否则会有警告。当然minmax也可以通过-b选项处理二进制文件。

C、E、I、S、T是minmax的特殊选项，其用法在例子中说明；其他选项都是GMT的标准选项，不再多说。

示例文件
========

示例文件test.txt内容如下：

::

    0       0       0   
    1       1       1   
    2       2       2   
    3       1       1   
    4       4       2   
    5       3       3   

用法示例
========

最简单的例子
------------

:: 

 $ minmax test.txt
 test.txt: N = 6 <0/5> <0/4> <0/3>

minmax后直接加文件名，输出结果中给出了文件的记录数（N=6），以及每列的最大最小值（格式为<min/max>）。这个结果很直观，一目了然。

-C选项示例
----------

:: 

 $ minmax -C test.txt
 0 5 0 4 0 3

-C选项将原始数据每列的极值分为两列输出，这样的输出方式在数据列数过多的情况下看起来容易眼花，但是却更易于用脚本来处理。

-E选项示例
----------

::

 $ minmax -El2 test.txt
 0 0 0

test.txt有三列，标记为第0-2列，因而这个例子中的2实际代表的是第三列数据。选项-El2使得命令只关注数据的第三列，猜测其原理是这样的：首先将文件遍历一遍，获取第三列的最大和最小值，然后再遍历第二遍，如果某个记录的第三列包含了最小值，则返回该记录。显然，第三列数据最小值为0，数据的第一个记录的第三列包含了该最小值，故而返回该记录。如果遇到多个记录同时包含该列最小值，则只返回遇到的第一个记录。

::

 $ minmax -Eh1 test.txt
 4 4 2

-Eh1返回第二列含有最大值的记录。而L和H则表示返回绝对值最小或最大的记录。

-I选项示例
----------

::

 $ minmax -I1 test.txt
 -R0/5/0/4

在使用-I选项后，默认情况下会处理前两列数据，获取其最大和最小值，并以-Rw/e/s/n的形式给出。至于-I后面的1的含义，下面会有例子说明。

minmax这样的返回格式，就带来命令行上的一个技巧：

::

 psxy `minmax -I1 test.txt` test.txt -Jx1 -B1 -P -Sc0.2 > test.ps

这个例子利用bash的反引号功能将minmax的输出-R0/5/0/4直接作为psxy命令的一个选项，将两行命令合成了一行。

|image0|

这样的图也许不是你想要的效果，因为6个点中有3个在边框上，看不清，所以要把-R的范围加大一些。

::

 $ minmax -I3 test.txt
 -R0/6/0/6

-I3对原始数据的最大最小值做了些处理。比如原来第一列的最大值5，变成了现在3的倍数6；原来第二列的最大值是4，现在变成了3的倍数6；0由于其自身就是3的倍数，所以没被修改。如果某列的最小值为-1，那么加入-I3之后就会变成-3。总之都是使得-R的范围变大了。这样画出来的图效果会更好（这个例子里的最小值0永远是任意一个数的倍数，所以导致-R的下限没有被加大，这个例子不太好）。当然也可以通过-I3/5这样的方式分别指定每一列的倍数值，其返回值为-R0/6/0/5。

::

 $ minmax -I3 -C test.txt
 0 6 0 6 0 3

-I选项和-C选项联合，可以对多列数据都采取类似的措施，默认-I3中的3对所有列都有效，可以使用-Ip3强制只对第一列有效；

::

 $ minmax -Ip3 -C test.txt
 0 6 0 4 0 3

-S选项示例
----------

没理解这个选项，占位待续。。。

-T选项示例
----------

-T与-I选项类似，其默认处理第一列数据，也可以在-T后指定要处理的列。

::

 $ minmax -T2 test.txt
 -T0/6/2

其输出可以作为makecpt等命令的选项。

.. |image0| image:: http://ww4.sinaimg.cn/large/c27c15bejw1e7ve252ze3j20ks0i4wez.jpg
